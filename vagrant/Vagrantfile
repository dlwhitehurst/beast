# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_NO_PARALLEL'] = 'yes'

VAGRANT_BOX         = "generic/ubuntu2204"
VAGRANT_BOX_VERSION = "4.2.6"
CPUS_MASTER_NODE    = 2
CPUS_WORKER_NODE    = 1
MEMORY_MASTER_NODE  = 8192 
MEMORY_WORKER_NODE  = 4096 
WORKER_NODES_COUNT  = 4

Vagrant.configure(2) do |config|
  
  # all machines moving forward 
  config.vm.provision "shell", path: "bootstrap.sh"
  
  # Kubernetes Master Server
  config.vm.define "bmaster" do |node|
  
    node.vm.box               = VAGRANT_BOX
    node.vm.box_check_update  = false
    node.vm.box_version       = VAGRANT_BOX_VERSION
    node.vm.hostname          = "bmaster"

    # node.vm.network "public_network", bridge: "eno1", ip: "192.168.1.100"
    node.vm.network "public_network", auto_config: false 

    node.vm.provider :virtualbox do |v|
      v.name    = "bmaster"
      v.memory  = MEMORY_MASTER_NODE
      v.cpus    = CPUS_MASTER_NODE
    end
  
    node.vm.provider :libvirt do |v|
      v.memory  = MEMORY_MASTER_NODE
      v.nested  = true
      v.cpus    = CPUS_MASTER_NODE
    end
  
    node.vm.provision "shell", path: "bootstrap_bmaster.sh"
  
  end


  # Kubernetes Worker Nodes
  (1..WORKER_NODES_COUNT).each do |i|

    config.vm.define "bnode#{i}" do |node|

      node.vm.box               = VAGRANT_BOX
      node.vm.box_check_update  = false
      node.vm.box_version       = VAGRANT_BOX_VERSION
      node.vm.hostname          = "bnode#{i}"

      # node.vm.network "public_network", bridge: "eno1", ip: "192.168.1.10#{i}"
      node.vm.network "public_network", auto_config: false 

      node.vm.provider :virtualbox do |v|
        v.name    = "bnode#{i}"
        v.memory  = MEMORY_WORKER_NODE
        v.cpus    = CPUS_WORKER_NODE
      end

      node.vm.provider :libvirt do |v|
        v.memory  = MEMORY_WORKER_NODE
        v.nested  = true
        v.cpus    = CPUS_WORKER_NODE
      end

     node.vm.provision "shell", path: "bootstrap_bnode.sh"

    end

  end

end
